// Функция для умножения двух строк, представляющих неотрицательные числа
char* multiply(char* num1, char* num2) {
   int len1 = strlen(num1);
    int len2 = strlen(num2);
    if (len1 == 0 || len2 == 0) return "0";

    // Массив для хранения результата умножения
    int* result = (int*)calloc(len1 + len2, sizeof(int));

    // Индексы для результирующего массива
    int i_n1 = 0;
    int i_n2 = 0;

    // Проходим по num1 и num2 справа налево
    for (int i = len1 - 1; i >= 0; i--) {
        int carry = 0;
        int n1 = num1[i] - '0';
        i_n2 = 0;

        for (int j = len2 - 1; j >= 0; j--) {
            int n2 = num2[j] - '0';
            int sum = n1 * n2 + result[i_n1 + i_n2] + carry;
            carry = sum / 10;
            result[i_n1 + i_n2] = sum % 10;
            i_n2++;
        }

        if (carry > 0) {
            result[i_n1 + i_n2] += carry;
        }
        i_n1++;
    }

    // Пропускаем начальные нули
    int i = len1 + len2 - 1;
    while (i >= 0 && result[i] == 0) {
        i--;
    }

    // Если все цифры нули
    if (i == -1) return "0";

    // Создаем строку для результата
    char* s = (char*)malloc(sizeof(char) * (i + 2));
    int k = 0;
    while (i >= 0) {
        s[k++] = result[i--] + '0';
    }
    s[k] = '\0';

    free(result);
    return s;
}
